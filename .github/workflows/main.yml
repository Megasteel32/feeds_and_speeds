name: Build and Package
on:
  push:
    branches:
      - main
    tags: '*'
  pull_request:
    branches:
      - main
jobs:
  build:
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [ubuntu-latest, windows-latest, macos-latest]
      fail-fast: false
    permissions:
      contents: write
    steps:
      - name: Checkout code
        uses: actions/checkout@v4
        with:
          fetch-depth: 0
      - name: Set up Python
        uses: actions/setup-python@v4
        with:
          python-version: '3.x'
      - name: Install dependencies
        run: |
          python -m pip install --upgrade pip
          pip install pyinstaller PyQt6
      - name: Set binary name
        id: set-binary-name
        shell: bash
        run: |
          if [ "${{ matrix.os }}" == "windows-latest" ]; then
            echo "BINARY_NAME=feeds_and_speeds_windows.exe" >> $GITHUB_OUTPUT
          elif [ "${{ matrix.os }}" == "macos-latest" ]; then
            echo "BINARY_NAME=feeds_and_speeds_macos" >> $GITHUB_OUTPUT
          else
            echo "BINARY_NAME=feeds_and_speeds_linux" >> $GITHUB_OUTPUT
          fi
      - name: Build with PyInstaller (Windows)
        if: matrix.os == 'windows-latest'
        run: |
          pyinstaller --onefile --windowed --icon="NONE" --name ${{ steps.set-binary-name.outputs.BINARY_NAME }} feeds_and_speeds.py
      - name: Build with PyInstaller (macOS)
        if: matrix.os == 'macos-latest'
        run: |
          pyinstaller --onefile --windowed --icon="" --name ${{ steps.set-binary-name.outputs.BINARY_NAME }} feeds_and_speeds.py
      - name: Build with PyInstaller (Linux)
        if: matrix.os == 'ubuntu-latest'
        run: |
          pyinstaller --onefile --icon="NONE" --name ${{ steps.set-binary-name.outputs.BINARY_NAME }} feeds_and_speeds.py
      - name: Upload artifact
        uses: actions/upload-artifact@v4
        with:
          name: ${{ steps.set-binary-name.outputs.BINARY_NAME }}
          path: dist/${{ steps.set-binary-name.outputs.BINARY_NAME }}
      - name: Commit and push binaries
        if: github.event_name == 'push' && github.ref == 'refs/heads/main'
        shell: bash
        run: |
          git config --global user.name 'github-actions[bot]'
          git config --global user.email '41898282+github-actions[bot]@users.noreply.github.com'
          git pull origin main
          mkdir -p binaries
          cp dist/${{ steps.set-binary-name.outputs.BINARY_NAME }} binaries/
          git add binaries
          git commit -m "Add compiled binary for ${{ matrix.os }}: ${{ steps.set-binary-name.outputs.BINARY_NAME }} [skip ci]" || echo "No changes to commit"
          git push || (git pull --rebase origin main && git push)
